openapi: 3.0.0
info:
  title: Prix Goncourt API
  version: 1.0.0
paths:
  /api/books:
    get:
      summary: Obtenir tous les livres
      responses:
        '200':
          description: Liste de tous les livres
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id_book:
                      type: integer
                    title:
                      type: string
                    author:
                      type: string
  /api/books/{id}:
    get:
      summary: Obtenir un livre par ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Détails d'un livre
  /api/selection/{no_selection}:
    get:
      summary: Livres d'une sélection
      parameters:
        - in: path
          name: no_selection
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Liste des livres pour une sélection
    post:
      summary: Ajouter des livres à une sélection
      parameters:
        - in: path
          name: no_selection
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_ids:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          description: Livres ajoutés à la sélection
  /api/books/{slug}:
    get:
      summary: Retrieve a book by slug
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the book
        '404':
          description: Book not found


  /api/selection/date/{date_str}:
    get:
      summary: Retrieve selections by date
      description: |
        This route allows searching selections made on a specific date.
      parameters:
        - name: date_str
          in: path
          required: true
          description: A string representing the date in 'YYYY-MM-DD' format.
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    selection_id:
                      type: integer
                    book_ids:
                      type: array
                      items:
                        type: integer
        '400':
          description: Invalid date format
        '404':
          description: No selections found for the given date
        '500':
          description: Internal server error
